// Generated by view binder compiler. Do not edit!
package com.editlike.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.editlike.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TemplateBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout base;

  @NonNull
  public final HorizontalScrollView hscroll1;

  @NonNull
  public final ImageView imageview1;

  @NonNull
  public final ImageView imageview2;

  @NonNull
  public final ImageView imageview3;

  @NonNull
  public final LinearLayout linear1;

  @NonNull
  public final CardView linear6;

  @NonNull
  public final CardView linear7;

  @NonNull
  public final LinearLayout template1;

  @NonNull
  public final LinearLayout template2;

  @NonNull
  public final TextView textview1;

  @NonNull
  public final TextView textview2;

  @NonNull
  public final TextView textview3;

  @NonNull
  public final LinearLayout title;

  private TemplateBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout base,
      @NonNull HorizontalScrollView hscroll1, @NonNull ImageView imageview1,
      @NonNull ImageView imageview2, @NonNull ImageView imageview3, @NonNull LinearLayout linear1,
      @NonNull CardView linear6, @NonNull CardView linear7, @NonNull LinearLayout template1,
      @NonNull LinearLayout template2, @NonNull TextView textview1, @NonNull TextView textview2,
      @NonNull TextView textview3, @NonNull LinearLayout title) {
    this.rootView = rootView;
    this.base = base;
    this.hscroll1 = hscroll1;
    this.imageview1 = imageview1;
    this.imageview2 = imageview2;
    this.imageview3 = imageview3;
    this.linear1 = linear1;
    this.linear6 = linear6;
    this.linear7 = linear7;
    this.template1 = template1;
    this.template2 = template2;
    this.textview1 = textview1;
    this.textview2 = textview2;
    this.textview3 = textview3;
    this.title = title;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TemplateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TemplateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.template, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TemplateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.base;
      LinearLayout base = ViewBindings.findChildViewById(rootView, id);
      if (base == null) {
        break missingId;
      }

      id = R.id.hscroll1;
      HorizontalScrollView hscroll1 = ViewBindings.findChildViewById(rootView, id);
      if (hscroll1 == null) {
        break missingId;
      }

      id = R.id.imageview1;
      ImageView imageview1 = ViewBindings.findChildViewById(rootView, id);
      if (imageview1 == null) {
        break missingId;
      }

      id = R.id.imageview2;
      ImageView imageview2 = ViewBindings.findChildViewById(rootView, id);
      if (imageview2 == null) {
        break missingId;
      }

      id = R.id.imageview3;
      ImageView imageview3 = ViewBindings.findChildViewById(rootView, id);
      if (imageview3 == null) {
        break missingId;
      }

      id = R.id.linear1;
      LinearLayout linear1 = ViewBindings.findChildViewById(rootView, id);
      if (linear1 == null) {
        break missingId;
      }

      id = R.id.linear6;
      CardView linear6 = ViewBindings.findChildViewById(rootView, id);
      if (linear6 == null) {
        break missingId;
      }

      id = R.id.linear7;
      CardView linear7 = ViewBindings.findChildViewById(rootView, id);
      if (linear7 == null) {
        break missingId;
      }

      id = R.id.template1;
      LinearLayout template1 = ViewBindings.findChildViewById(rootView, id);
      if (template1 == null) {
        break missingId;
      }

      id = R.id.template2;
      LinearLayout template2 = ViewBindings.findChildViewById(rootView, id);
      if (template2 == null) {
        break missingId;
      }

      id = R.id.textview1;
      TextView textview1 = ViewBindings.findChildViewById(rootView, id);
      if (textview1 == null) {
        break missingId;
      }

      id = R.id.textview2;
      TextView textview2 = ViewBindings.findChildViewById(rootView, id);
      if (textview2 == null) {
        break missingId;
      }

      id = R.id.textview3;
      TextView textview3 = ViewBindings.findChildViewById(rootView, id);
      if (textview3 == null) {
        break missingId;
      }

      id = R.id.title;
      LinearLayout title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new TemplateBinding((LinearLayout) rootView, base, hscroll1, imageview1, imageview2,
          imageview3, linear1, linear6, linear7, template1, template2, textview1, textview2,
          textview3, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

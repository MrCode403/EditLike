// Generated by view binder compiler. Do not edit!
package com.editlike.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.VideoView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.editlike.app.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BackgroundlayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout addfile;

  @NonNull
  public final LinearLayout backgroundvideoview;

  @NonNull
  public final LinearLayout container;

  @NonNull
  public final TextView date;

  @NonNull
  public final EditText description;

  @NonNull
  public final ImageView dot3;

  @NonNull
  public final RelativeLayout ground;

  @NonNull
  public final ImageView imageview5;

  @NonNull
  public final LinearLayout linear3;

  @NonNull
  public final EditText name;

  @NonNull
  public final CircleImageView profilephoto;

  @NonNull
  public final LinearLayout statusbar;

  @NonNull
  public final TextView textview13;

  @NonNull
  public final TextView textview6;

  @NonNull
  public final TextView textview7;

  @NonNull
  public final TextView time;

  @NonNull
  public final LinearLayout toolbar;

  @NonNull
  public final LinearLayout tweetview;

  @NonNull
  public final EditText username;

  @NonNull
  public final VideoView videoview1;

  private BackgroundlayoutBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout addfile,
      @NonNull LinearLayout backgroundvideoview, @NonNull LinearLayout container,
      @NonNull TextView date, @NonNull EditText description, @NonNull ImageView dot3,
      @NonNull RelativeLayout ground, @NonNull ImageView imageview5, @NonNull LinearLayout linear3,
      @NonNull EditText name, @NonNull CircleImageView profilephoto,
      @NonNull LinearLayout statusbar, @NonNull TextView textview13, @NonNull TextView textview6,
      @NonNull TextView textview7, @NonNull TextView time, @NonNull LinearLayout toolbar,
      @NonNull LinearLayout tweetview, @NonNull EditText username, @NonNull VideoView videoview1) {
    this.rootView = rootView;
    this.addfile = addfile;
    this.backgroundvideoview = backgroundvideoview;
    this.container = container;
    this.date = date;
    this.description = description;
    this.dot3 = dot3;
    this.ground = ground;
    this.imageview5 = imageview5;
    this.linear3 = linear3;
    this.name = name;
    this.profilephoto = profilephoto;
    this.statusbar = statusbar;
    this.textview13 = textview13;
    this.textview6 = textview6;
    this.textview7 = textview7;
    this.time = time;
    this.toolbar = toolbar;
    this.tweetview = tweetview;
    this.username = username;
    this.videoview1 = videoview1;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BackgroundlayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BackgroundlayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.backgroundlayout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BackgroundlayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addfile;
      LinearLayout addfile = ViewBindings.findChildViewById(rootView, id);
      if (addfile == null) {
        break missingId;
      }

      id = R.id.backgroundvideoview;
      LinearLayout backgroundvideoview = ViewBindings.findChildViewById(rootView, id);
      if (backgroundvideoview == null) {
        break missingId;
      }

      id = R.id.container;
      LinearLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.description;
      EditText description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.dot3;
      ImageView dot3 = ViewBindings.findChildViewById(rootView, id);
      if (dot3 == null) {
        break missingId;
      }

      id = R.id.ground;
      RelativeLayout ground = ViewBindings.findChildViewById(rootView, id);
      if (ground == null) {
        break missingId;
      }

      id = R.id.imageview5;
      ImageView imageview5 = ViewBindings.findChildViewById(rootView, id);
      if (imageview5 == null) {
        break missingId;
      }

      id = R.id.linear3;
      LinearLayout linear3 = ViewBindings.findChildViewById(rootView, id);
      if (linear3 == null) {
        break missingId;
      }

      id = R.id.name;
      EditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.profilephoto;
      CircleImageView profilephoto = ViewBindings.findChildViewById(rootView, id);
      if (profilephoto == null) {
        break missingId;
      }

      id = R.id.statusbar;
      LinearLayout statusbar = ViewBindings.findChildViewById(rootView, id);
      if (statusbar == null) {
        break missingId;
      }

      id = R.id.textview13;
      TextView textview13 = ViewBindings.findChildViewById(rootView, id);
      if (textview13 == null) {
        break missingId;
      }

      id = R.id.textview6;
      TextView textview6 = ViewBindings.findChildViewById(rootView, id);
      if (textview6 == null) {
        break missingId;
      }

      id = R.id.textview7;
      TextView textview7 = ViewBindings.findChildViewById(rootView, id);
      if (textview7 == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      id = R.id.toolbar;
      LinearLayout toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tweetview;
      LinearLayout tweetview = ViewBindings.findChildViewById(rootView, id);
      if (tweetview == null) {
        break missingId;
      }

      id = R.id.username;
      EditText username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      id = R.id.videoview1;
      VideoView videoview1 = ViewBindings.findChildViewById(rootView, id);
      if (videoview1 == null) {
        break missingId;
      }

      return new BackgroundlayoutBinding((LinearLayout) rootView, addfile, backgroundvideoview,
          container, date, description, dot3, ground, imageview5, linear3, name, profilephoto,
          statusbar, textview13, textview6, textview7, time, toolbar, tweetview, username,
          videoview1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
